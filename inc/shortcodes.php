<?php
/**
 * Twenty'em WordPress Framework.
 *
 * WARNING: This file is part of Twenty'em WordPress Framework.
 * DO NOT edit this file under any circumstances. Do all your modifications in the form of a child theme.
 *
 * @package			WordPress
 * @subpackage		Twenty'em
 * @author			RogerTM
 * @license			license.txt
 * @link			https://themingisprose.com/twenty-em
 * @since 			Twenty'em 1.0
 */

/**
 * Twenty'em shortcodes.
 *
 * @link http://codex.wordpress.org/Shortcode_API
 */

/**
 * Include additional buttons in the Text (HTML) mode of the WordPress editor
 *
 * @since Twenty'em 1.0
 */
function t_em_quicktags_buttons(){
	if ( wp_script_is( 'quicktags' ) && t_em( 'shortcode_buttoms' ) ) :
?>
	<script type="text/javascript">
		QTags.addButton( 'sc_button', 'button', '[button link="" style="primary" size="" new_window="false"]', '[/button]' );
		QTags.addButton( 'sc_btn-group', 'btn-group', '[btn-group size="" vertical="false"]', '[/btn-group]' );
		QTags.addButton( 'sc_alert', 'alert', '[alert style="primary" heading="" close="false"]', '[/alert]' );
		QTags.addButton( 'sc_quote', 'quote', '[quote text_align="" cite=""]', '[/quote]' );
		QTags.addButton( 'sc_icon', 'icon', '[icon class=""]', '' );
		QTags.addButton( 'sc_columns', 'columns', '[columns cols="2"]', '[/columns]' );
		QTags.addButton( 'sc_card', 'card', '[card header="" title="" footer="" style="" img="" img_overlay="false"]', '[/card]' );
		QTags.addButton( 'sc_card-group', 'card-group', '[card-group style="group"]', '[/card-group]' );
		QTags.addButton( 'sc_lead', 'lead', '[lead]', '[/lead]' );
		QTags.addButton( 'sc_badge', 'badge', '[badge style="secondary"]', '[/badge]' );
		QTags.addButton( 'sc_collapse', 'collapse', '[collapse]', '[/collapse]' );
		QTags.addButton( 'sc_collapse-item', 'collapse-item', '[collapse-item title="" active="false"]', '[/collapse-item]' );
		QTags.addButton( 'sc_tab', 'tabs', '[tabs type="tabs" class=""]', '[/tabs]' );
		QTags.addButton( 'sc_tab-item', 'tab-item', '[tab-item title="" active="false"]', '[/tab-item]' );
		QTags.addButton( 'sc_display', 'display', '[display size="1"]', '[/display]' );
		QTags.addButton( 'sc_jumbotron', 'jumbotron', '[jumbotron]', '[/jumbotron]' );
		QTags.addButton( 'sc_progress', 'progress', '[progress height=""]', '[/progress]' );
		QTags.addButton( 'sc_progress-bar', 'progress-bar', '[progress-bar width="" type="" striped="false" animated="false"]', '[/progress-bar]' );
		QTags.addButton( 'sc_iframe', 'iframe', '[iframe src="" ratio="16by9"]', '[/iframe]' );
		QTags.addButton( 'sc_tooltip', 'tooltip', '[tooltip placement="top" title=""]', '[/tooltip]' );
		QTags.addButton( 'sc_popover', 'popover', '[popover title="" content="" placement="top"]', '[/popover]' );
	</script>
<?php
	endif;
}
add_action( 'admin_print_footer_scripts', 't_em_quicktags_buttons' );

/**
 * Shortcode [button]
 * Enclosing. Permits others shortcodes.
 * Behavior: [button link="" style="default" size=""]Button Text[/button]
 * Options:
 * 0. link.			Required. Default value "empty". Possibles value: button link (e.g https://themingisprose.com/twenty-em)
 * 1. style. 		Optional. Default value "primary".
 * 2. new_window.	Optional, Default value "false". Possibles values "false", "true". (open link in new window)
 * 3. size. 		Optional. Default value "empty". Possibles values: "lg", "sm"
 *
 * @see https://getbootstrap.com/docs/4.0/components/buttons/
 *
 * @since Twenty'em 1.0
 */
function t_em_shortcode_button( $atts, $content = null ){
	extract( shortcode_atts( array(
			'link'			=> '',
			'style'			=> 'primary',
			'new_window'	=> 'false',
			'size'			=> '',
		), $atts ) );
	$link		= ( $link ) ? esc_url( $link ) : null;
	$style		= ( $style ) ? 'btn-'. esc_attr( $style ) : 'btn-primary';
	$new_window	= ( $new_window == 'true' ) ? 'target="_blank"' : null;
	$size		= ( $size ) ? 'btn-'. esc_attr( $size ) : null;
	return '<a href="'. esc_url( $link ) .'" class="btn '. $style .' '. $size .'" '. $new_window .'>'. do_shortcode( $content ) .'</a>';
}
add_shortcode( 'button', 't_em_shortcode_button' );

/**
 * Shortcode [btn-group]
 * Enclosing. Permits others shortcodes
 * Behavior: [btn-group size=""][/btn-group].
 * Used to group buttons created with [button] shortcode
 * Options:
 * 0. size. 		Optional. Default value "empty". Possibles values "lg", "sm"
 *
 * @see https://getbootstrap.com/docs/4.0/components/button-group/
 *
 * @since Twenty'em 1.0
 * @since Twenty'em 1.2		Removed "justify" parameter
 * @since Twenty'em 1.2.1	Added "vertical" parameter
 */
function t_em_shortcode_btn_group( $atts, $content = null ){
	extract( shortcode_atts( array(
			'size'		=> '',
			'vertical'	=> 'false',
		), $atts ) );
	$size = ( esc_attr( $size ) ) ? 'btn-group-'. esc_attr( $size ) : null;
	$vertical = ( esc_attr( $vertical ) == 'true' ) ? 'btn-group-vertical' : null;
	return '<div class="btn-group '. $size .' '. $vertical .'" role="group" aria-label="'. __( 'Button group', 't_em' ) .'">'. do_shortcode( $content ) .'</div>';
}
add_shortcode( 'btn-group', 't_em_shortcode_btn_group' );

/**
 * Shortcode [alert]
 * Enclosing. Permits others shortcodes.
 * Behavior: [alert style="primary" heading="" close="false"][/alert]
 * Options:
 * 0. style. 		Optional. (but recommended). Default value "primary".
 * 1. heading. 		Optional. Alert Heading
 * 2. close. 		Optional. Default value "false". Display a close button
 *
 * @see https://getbootstrap.com/docs/4.0/components/alerts/
 *
 * @since Twenty'em 1.0
 * @since Twenty'em 1.2		Added "heading" parameter
 */
function t_em_shortcode_alert( $atts, $content = null ){
	extract( shortcode_atts( array(
			'style' => 'primary',
			'heading' => '',
			'close' => 'false',
		), $atts ) );
	$close_button = ( esc_attr( $close ) == 'true' ) ? '<button type="button" class="close" aria-hidden="true" data-dismiss="alert">&times;</button>' : null;
	$style = ( esc_attr( $style ) != '' ) ? esc_attr( $style ) : 'primary';
	$heading = ( esc_attr( $heading ) != '' ) ? '<h4 class="alert-heading">'. esc_attr( $heading ).'</h4>' : null;
	return '<div class="alert alert-'. esc_attr( $style ) .'">' . $close_button . $heading . '<p class="mb-0">' . do_shortcode( $content ) .'</p></div>';
}
add_shortcode( 'alert', 't_em_shortcode_alert' );

/**
 * Shortcode [quote]
 * Enclosing. Permits others shortcodes.
 * Behavior: [quote text_align="" cite=""][/quote]
 * Options:
 * 0. text_align. 	Optional. Default value "empty". Possibles values "left", "right", "center". Text alignment
 * 1. cite. 		Optional. Cite's source
 *
 * @see https://getbootstrap.com/docs/4.0/content/typography/#blockquotes
 *
 * @since Twenty'em 1.0
 * @since Twenty'em 1.2		Added "cite" attribute
 * @since Twenty'em 1.2		Removed "float" attribute
 */
function t_em_shortcode_quote( $atts, $content = null ){
	extract( shortcode_atts( array(
			'text_align' => '',
			'cite' => '',
		), $atts ) );
	$text_align = ( $text_align ) ? 'text-'. esc_attr( $text_align ) : null;
	$cite = ( $cite ) ? '<footer class="blockquote-footer">'. esc_attr( $cite ) .'</footer>' : null;

	return '<blockquote class="blockquote '. esc_attr( $text_align ) .'"><p>'. do_shortcode( $content ) .'</p>'. $cite .'</blockquote>';
}
add_shortcode( 'quote', 't_em_shortcode_quote' );

/**
 * Shortcode [icon]
 * Self-closing
 * Behavior [icon class="" align="" size=""]
 * Options:
 * 0. icon_class. Required. Default value "empty". Possibles values "icomoon-$icon_name". Display a
 * IcoMoon icon
 *
 * @link https://themingisprose.com/twenty-em/icomoon-demo For a full list of icon classes.
 *
 * @since Twenty'em 1.0
 */
function t_em_shortcode_icomoon_icon( $atts ){
	extract( shortcode_atts( array(
			'class' => '',
		), $atts ) );
	$class_size = ( ! empty( $size ) ) ? esc_attr( $size ) : null;
	$class_align = ( ! empty( $align ) ) ? 'pull-'. esc_attr( $align ) : null;

	return '<span class="'. esc_attr( $class ) .'"></span>';
}
add_shortcode( 'icon', 't_em_shortcode_icomoon_icon' );

/**
 * Shortcode [columns]
 * Enclosing. Permits others shortcodes.
 * Behavior [columns cols=""][/columns]
 * Options:
 * 0. cols. Optional. Number of columns. Default value "2". Possibles values: "2", "3", "4".
 *
 * @since Twenty'em 1.0
 * @since Twenty'em 1.2		Limits columns count to 4
 */
function t_em_shortcode_columns( $atts, $content = null ){
	extract( shortcode_atts( array(
			'cols' => '2',
		), $atts ) );
	$cols = ( $cols && $cols <= 4 && $cols > 1 ) ? esc_attr( $cols ) : 2;
	return '<div class="columns columns-'. $cols .'"><p>'. do_shortcode( $content ) .'</p></div>';
}
add_shortcode( 'columns', 't_em_shortcode_columns' );

/**
 * Shortcode [lead]
 * Enclosing. Permits others shortcodes
 * Behavior [lead][/lead]
 *
 * @since Twenty'em 1.0
 */
function t_em_shortcode_lead( $atts, $content = null ){
	return '<div class="lead"><p>'. do_shortcode( $content ) .'</p></div>';
}
add_shortcode( 'lead', 't_em_shortcode_lead' );

/**
 * Shorcode [card]
 * Enclosing. Permits others shortcodes
 * Behavior [card header="" title="" footer="" style="" img="" img_overlay="false"][/card]
 * Options:
 * 0. header.		Optional. Default value "empty"
 * 1. title.		Optional. Default value "empty"
 * 2. footer.		Optional. Default value "empty"
 * 3. style.		Optional. Default value "empty"
 * 4. img.			Optional. Image url. Default value "empty"
 * 5. img_overlay.	Optional. Image url. Default value "empty"
 *
 * @see https://getbootstrap.com/docs/4.0/components/card/
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_card( $atts, $content = null ){
	extract( shortcode_atts( array(
			'header'		=> '',
			'title'			=> '',
			'footer'		=> '',
			'style'			=> '',
			'img'			=> '',
			'img_overlay'	=> 'false',
		), $atts ) );
	$header = ( $header ) ? '<div class="card-header">'. esc_attr( $header ) .'</div>' : null;
	$title	= ( $title ) ? '<h4 class="card-title">'. esc_attr( $title ) .'</h4>' : null;
	$footer = ( $footer ) ? '<div class="card-footer">'. esc_attr( $footer ) .'</div>' : null;
	$style	= ( $style ) ? esc_attr( $style ) : null;
	$img	= ( $img ) ? '<img src="'. esc_url( $img ) .'" class="car-img-top">' : null;
	$body 	= ( $img_overlay == 'true' ) ? 'card-img-overlay' : 'card-body';

	$card = '<div class="card '. $style .'">';
	$card .=	$header;
	$card .=	$img;
	$card .= 	'<div class="'. $body .'">';
	$card .=		$title;
	$card .=		'<p>'. do_shortcode( $content ) .'</p>';
	$card .= 	'</div>';
	$card .=	$footer;
	$card .= '</div>';
	return $card;
}
add_shortcode( 'card', 't_em_shortcode_card' );

/**
 * Shortcode [card-group]
 * Enclosing. Permits others shortcodes
 * Behavior [card-group style="group"][/card-group]
 * Options:
 * 0. style.	Optional. Default value "group"
 *
 * @see https://getbootstrap.com/docs/4.0/components/card/#card-groups
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_card_group( $atts, $content = null ){
	extract( shortcode_atts( array(
			'style'	=> 'group',
		), $atts ) );
	$group_style = ( $style != '' ) ? esc_attr( $style ) : 'group';
	return '<div class="card-'. $group_style .'">'. do_shortcode( $content ) .'</div>';
}
add_shortcode( 'card-group', 't_em_shortcode_card_group' );

/**
 * Shortcode [badge]
 * Enclosing. Permits others shortcodes
 * Behavior [badge style="secondary"][/badge]
 * Options:
 * 0. style. 	Optional. Default value "secondary".
 *
 * @see https://getbootstrap.com/docs/4.0/components/badge/
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_badge( $atts, $content = null ){
	extract( shortcode_atts( array(
			'style'	=> 'secondary',
		), $atts ) );
	$style = ( $style != '' ) ? esc_attr( $style ) : 'secondary';
	return '<span class="badge badge-'. $style .'">'. do_shortcode( $content ) .'</span>';
}
add_shortcode( 'badge', 't_em_shortcode_badge' );

/**
 * Shortcode [collapse-item].
 * Enclosing. Permits others shortcodes
 * Behavior [collapse-item title=""][/collapse-item]
 * Options:
 * 0. title.	Required. Item title. Default value "empty".
 * 1. active 	Optional. If the item is active on load. Default "false"
 *
 * @see https://getbootstrap.com/docs/4.0/components/collapse/
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_collapse_item( $atts, $content = null ){
	if ( isset( $GLOBALS['collapse_item_count'] ) ) :
		$GLOBALS['collapse_item_count']++;
	else :
		$GLOBALS['collapse_item_count'] = 0;
	endif;

	extract( shortcode_atts( array(
			'title'	=> '',
			'active' => 'false',
		), $atts ) );
	$title 		= ( $title ) ? esc_attr( $title ) : null;
	$item_id	= ( $title ) ? sanitize_title( $title ) .'-'. $GLOBALS['collapse_item_count']  : null;
	$active 	= ( $active == 'true' ) ? 'show' : null;
	$expanded 	= ( $active ) ? 'true' : 'false';

	$item = '<div class="collapsible-item">';
	$item .= 	'<a class="collapsible-title lead" href="#'. $item_id .'" data-toggle="collapse" data-parent="#collapse-'. $GLOBALS['collapse_count'] .'" aria-expanded="'. $expanded .'" aria-controls="'. $item_id .'">';
	$item .=		$title;
	$item .=	'</a>';
	$item .=	'<div id="'. $item_id .'" class="collapsible-text collapse '. $active .'" role="tabpanel">';
	$item .= 		'<p>'. do_shortcode( $content ) .'</p>';
	$item .= 	'</div>';
	$item .= '</div>';
	return $item;
}
add_shortcode( 'collapse-item', 't_em_shortcode_collapse_item' );

/**
 * Shorcode [collapse]
 * Enclosing. Permits others shortcodes
 * Behavior [collapse][/collapse]
 *
 * @see https://getbootstrap.com/docs/4.0/components/collapse/
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_collapse( $atts, $content = null ){
	if ( isset( $GLOBALS['collapse_count'] ) ) :
		$GLOBALS['collapse_count']++;
	else :
		$GLOBALS['collapse_count'] = 0;
	endif;
	return '<div id="collapse-'. $GLOBALS['collapse_count'] .'" class="collapsible" data-children=".collapsible-item">'. do_shortcode( $content ) .'</div>';
}
add_shortcode( 'collapse', 't_em_shortcode_collapse' );

/**
 * Shortcode [tab-item]
 * Part of the code in this shortcode is inspired in "Bootstrap 3 Shortcodes": https://github.com/MWDelaney/bootstrap-shortcodes
 * Enclosing. Permits others shortcodes
 * Behavior [tab-item title="" active="false"][/tab-item]
 * Options:
 * 0. title 	Required. Tab title. Default value "empty"
 * 1. class 	Optional. Default value "empty"
 *
 * @see https://getbootstrap.com/docs/4.0/components/navs/
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_tab_item( $atts, $content = null ){
	extract( shortcode_atts( array(
			'title' => '',
			'active' => 'false',
		), $atts ) );
	$title = ( $title ) ? esc_attr( $title ) : null;
	$item_id = ( $title ) ? sanitize_title( $title ) .'-'. $GLOBALS['tabs_count'] : null;

	if( $GLOBALS['tabs_default_active'] && $GLOBALS['tabs_default_count'] == 0 ) {
			$atts['active'] = true;
	}
	$GLOBALS['tabs_default_count']++;

	$item_active = ( $atts['active'] == 'true' ) ? 'active' : null;
	$item = '<div id="'. $item_id .'" class="tab-pane fade '. $item_active .'" role="tabpanel">';
	$item .=	'<p>'. do_shortcode( $content ) .'</p>';
	$item .= '</div>';
	return $item;
}
add_shortcode( 'tab-item', 't_em_shortcode_tab_item' );

/**
 * Shortcode [tabs]
 * Part of the code in this shortcode is inspired in "Bootstrap 3 Shortcodes": https://github.com/MWDelaney/bootstrap-shortcodes
 * Enclosing. Permits others shortcodes
 * Behavior [tabs type="" class=""][/tabs]
 * Options:
 * 0. type 		Optional. Default value "empty"
 * 1. class 	Optional. Default value "empty"
 *
 * @see https://getbootstrap.com/docs/4.0/components/navs/
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_tabs( $atts, $content = null ){
	extract( shortcode_atts( array(
			'type' => 'tabs',
			'class' => '',
		), $atts ) );
	$type = ( $type ) ? 'nav-'. esc_attr( $type ) : 'nav-tabs';
	$class = ( $class ) ? esc_attr( $class ) : null;
	$items_map = t_em_shortcode_attr_map( $content );

	if ( isset( $GLOBALS['tabs_count'] ) ) :
		$GLOBALS['tabs_count']++;
	else :
		$GLOBALS['tabs_count'] = 0;
	endif;

	$GLOBALS['tabs_default_count'] = 0;

	// Get the tabs items
	if ( $items_map ) :
		$tabs = array();
		$GLOBALS['tabs_default_active'] = true;

		foreach ( $items_map as $item ) :
			if ( $item['tab-item']['active'] == 'true' ) :
				$GLOBALS['tabs_default_active'] = false;
			endif;
		endforeach;
		$i = 0;
		foreach ( $items_map as $item ) :
			if ( $item['tab-item']['active'] == 'true' ) :
				$GLOBALS['tabs_default_active'] = false;
			endif;
			$item_id = sanitize_title( $item['tab-item']['title'] ) .'-'. $GLOBALS['tabs_count'];
			$item_class = 'nav-item';
			$active = ( $item['tab-item']['active'] == 'true' || ( $GLOBALS['tabs_default_active'] == true && $i == 0 ) ) ? 'active' : null;
			$tabs[] = '<li class="'. $item_class .'"><a href="#'. $item_id .'" class="nav-link '. $active .'" data-toggle="pill">'. $item['tab-item']['title'] .'</a></li>';
			$i++;
		endforeach;
	endif;

	$output = '<div class="tabbable my-3">';
	$output .= 	'<ul class="nav '. $type .' '. $class .' mb-2" role="tablist">'. implode( '', $tabs ) .'</ul>';
	$output .= 	'<div class="tab-content">'. do_shortcode( $content ) .'</div>';
	$output .= '</div>';
	return $output;
}
add_shortcode( 'tabs', 't_em_shortcode_tabs' );

/**
 * Shortcode [display]
 * Enclosing. Permits others shortcodes.
 * Behavior: [display size="1"]Display Text[/display]
 * Options:
 * 0. size:		Required. Default value "1". Possible values "1", "2", "3", "4"
 *
 * @see https://getbootstrap.com/docs/4.1/content/typography/#display-headings
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_display( $atts, $content = null ){
	extract( shortcode_atts( array(
				'size'	=> '1',
			), $atts ) );
	$sizes = array( 1, 2, 3, 4 );
	$size = ( $size && in_array( $size, $sizes ) ) ? 'display-'. esc_attr( $size ) : 'display-1';
	return '<span class="'. $size .'">'. do_shortcode( $content ) .'</span>';
}
add_shortcode( 'display', 't_em_shortcode_display' );

/**
 * Shortcode [jumbotron]
 * Enclosing. Permits others shortcodes
 * Behavior: [jumbotron][/jumbotron]
 *
 * @see https://getbootstrap.com/docs/4.1/components/jumbotron/
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_jumbotron( $atts, $content = null ){
	return '<div class="jumbotron">'. do_shortcode( $content ) .'</div>';
}
add_shortcode( 'jumbotron', 't_em_shortcode_jumbotron' );

/**
 * Shortcode [progress]
 * Enclosing. Permits others shortcodes
 * Behavior: [progress][/progress]
 * Options:
 * 0. height:	Optional. Height, in pixels, of the bar.
 *
 * @see https://getbootstrap.com/docs/4.1/components/progress/
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_progress( $atts, $content = null ){
	extract( shortcode_atts( array(
				'height'	=> '',
			), $atts ) );
	$height	= ( $height && is_numeric( $height ) ) ? 'style="height: '. esc_attr( $height ) .'px"' : null;
	return '<div class="progress" '. $height .'>'. do_shortcode( $content ) .'</div>';
}
add_shortcode( 'progress', 't_em_shortcode_progress' );

/**
 * Shortcode [progress-bar]
 * Enclosing. Permits others shortcodes
 * Behavior: [progress-bar][/progress-bar]
 * Options:
 * 0. width:	Optional. Width of the progress bar. Default 0.
 * 1. type: 	Optional. Background style. Possible values "success", "info", "warning", "danger" or custom background.
 * 2. striped: 	Optional. Possible values "false", "true". Default "false".
 * 3. animated:	Optional. Possible values "false", "true". Default "false".
 *
 * @see https://getbootstrap.com/docs/4.1/components/progress/
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_progress_bar( $atts, $content = null ){
	extract( shortcode_atts( array(
				'width'		=> '',
				'type'		=> '',
				'striped'	=> false,
				'animated'	=> false,
			), $atts ) );
	$width		= ( $width && is_numeric( $width ) ) ? esc_attr( $width ) : null;
	$style 		= ( $width ) ? 'style="width: '. $width .'%"' : null;
	$now		= ( $width ) ? 'aria-valuenow="'. $width .'"' : 'aria-valuenow="0"';
	$type		= ( $type ) ? 'bg-'. esc_attr( $type ) : null;
	$striped	= ( $striped == 'true' ) ? 'progress-bar-striped' : null;
	$animated	= ( $animated == 'true' ) ? 'progress-bar-animated' : null;

	return '<div class="progress-bar '. $type .' '. $striped .' '. $animated .'" role="progressbar" '. $style .' '. $now .' aria-valuemin="0" aria-valuemax="100">'. do_shortcode( $content ) .'</div>';
}
add_shortcode( 'progress-bar', 't_em_shortcode_progress_bar' );

/**
 * Shortcode [iframe]
 * Self-closing
 * Behavior: [iframe src="" ratio="16by9"]
 * Options:
 * 0. src:		Required. URL of the embed object. Ej: https://www.youtube.com/embed/gFW9SdusBiE
 * 1. ratio:	Optional. Aspect ratio. Default 16by9.
 *
 * @see https://getbootstrap.com/docs/4.1/utilities/embed/
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_iframe( $atts, $content = null ){
	extract( shortcode_atts( array(
				'src'	=> '',
				'ratio'	=> '16by9',
			), $atts ) );
	$ratios	= array( '21by9', '16by9', '4by3', '1by1' );
	$src	= ( $src ) ? esc_url( $src ) : null;
	$ratio 	= ( $ratio && in_array( $ratio, $ratios ) ) ? 'embed-responsive-'. $ratio : 'embed-responsive-16by9';
	return '<div class="embed-responsive '. $ratio .'"><iframe class="embed-responsive-item" src="'. $src .'" allowfullscreen></iframe></div>';
}
add_shortcode( 'iframe', 't_em_shortcode_iframe' );

/**
 * Shortcode [tooltip]
 * Enclosing. Permits others shortcodes
 * Behavior: [tooltip placement="top" title=""][/tooltip]
 * Options:
 * 0. placement:	Optional. Placement of the tooltip. Default 'top'.
 * 1. title:		Required. Title to display
 *
 * @see https://getbootstrap.com/docs/4.1/components/tooltips/
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_tooltip( $atts, $content = null ){
	extract( shortcode_atts( array(
				'placement'	=> 'top',
				'title'		=> '',
			), $atts ) );
	$places		= array( 'top', 'right', 'bottom', 'left' );
	$placement	= ( $placement && in_array( $placement, $places ) ) ? $placement : 'top';
	$title 		= ( $title ) ? esc_attr( $title ) : null;
	return '<span data-toggle="tooltip" data-placement="'. $placement .'" title="'. $title .'" data-html="true">'. do_shortcode( $content ) .'</span>';
}
add_shortcode( 'tooltip', 't_em_shortcode_tooltip' );

/**
 * Shortcode [popover]
 * Enclosing. Permits others shortcodes
 * Behavior: [popover title="" content="" placement="top"][/popover]
 * Options:
 * 0. title:		Optional but recommended. Popover's title.
 * 1. content:		Optional but recommended. Popover's content.
 * 2. placement:	Optional. Popover's placement. Default 'top'.
 *
 * Note: One of the parameters 'title' or 'content' must exist to popover works properly.
 *
 * @see https://getbootstrap.com/docs/4.1/components/popovers/
 *
 * @since Twenty'em 1.3.1
 */
function t_em_shortcode_popover( $atts, $cnt = null ){
	extract( shortcode_atts( array(
				'placement'	=> 'top',
				'title'		=> '',
				'content'	=> '',
			), $atts ) );
	$places		= array( 'top', 'right', 'bottom', 'left' );
	$placement	= ( $placement && in_array( $placement, $places ) ) ? $placement : 'top';
	$title 		= ( $title ) ? esc_attr( $title ) : null;
	$content 	= ( $content ) ? esc_attr( $content ) : null;
	return '<span data-toggle="popover" data-placement="'. $placement .'" title="'. $title .'" data-content="'. $content .'"  data-container="body">'. do_shortcode( $cnt ) .'</span>';
}
add_shortcode( 'popover', 't_em_shortcode_popover' );

/**
 * Helper function. Create attributes map
 * @param $content string 	String containing a shortcode, usually post content.
 * @return array 			Array containing shortcode map
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_attr_map( $content ){
	$res = array();
	$output = array();
	$regex = get_shortcode_regex();
	preg_match_all( '~'.$regex.'~', $content, $matches );

	foreach( $matches[2] as $key => $value ) :
		$parsed = shortcode_parse_atts( $matches[3][$key] );
		$parsed = is_array( $parsed ) ? $parsed : array();
		$res[$value] = $parsed;
		$output[] = $res;
	endforeach;
	return $output;
}

/**
 * Helper function. Remove extra line breaks around shortcodes
 *
 * @since Twenty'em 1.2
 */
function t_em_shortcode_cleanup( $content ){
	$tags = array(
		']<br />'	=> ']',
		']<br>'		=> ']',
	);
	$content = strtr( $content, $tags );
	return $content;
}
add_filter( 'the_content', 't_em_shortcode_cleanup' );
?>
